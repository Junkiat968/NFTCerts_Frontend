{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaspz\\\\Documents\\\\GitHub\\\\ITP\\\\Blockchain-Trusted-Model\\\\client\\\\src\\\\contexts\\\\EthContext\\\\EthProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [loginState, setLoginState] = useState(false);\n  const init = useCallback(async artifact => {\n    if (artifact) {\n      // alert(\"hi?\");\n      const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\"); // const accounts = await web3.eth.requestAccounts();\n\n      const accounts = await ethereum.request({\n        method: 'eth_accounts'\n      });\n      setCurrentAccount(accounts);\n      const networkID = await web3.eth.net.getId();\n      const {\n        abi\n      } = artifact;\n      let address, contract;\n\n      try {\n        address = artifact.networks[networkID].address;\n        contract = new web3.eth.Contract(abi, address);\n      } catch (err) {\n        console.error(err);\n      }\n\n      dispatch({\n        type: actions.init,\n        data: {\n          artifact,\n          web3,\n          accounts,\n          networkID,\n          contract\n        }\n      });\n    }\n  }, []);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const accountConnected = state.accounts;\n\n      if (accountConnected) {\n        setLoginState(true);\n      } else {\n        console.log(\"No accounts found.\");\n      }\n    } catch (error) {\n      console.log(error);\n      throw new Error(\"No ethereum object\");\n    }\n  };\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/SimpleStorage.json\");\n\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    const events = [\"chainChanged\", \"accountsChanged\"];\n\n    const handleChange = () => {\n      init(state.artifact);\n      window.location.reload();\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n  return /*#__PURE__*/_jsxDEV(EthContext.Provider, {\n    value: {\n      state,\n      dispatch,\n      init,\n      currentAccount,\n      loginState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EthProvider, \"u+KcVOwzOPO1VIkKyqJ5qIyppzA=\");\n\n_c = EthProvider;\nexport default EthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"EthProvider\");","map":{"version":3,"names":["React","useReducer","useCallback","useEffect","useState","Web3","EthContext","reducer","actions","initialState","EthProvider","children","state","dispatch","currentAccount","setCurrentAccount","loginState","setLoginState","init","artifact","web3","givenProvider","accounts","ethereum","request","method","networkID","eth","net","getId","abi","address","contract","networks","Contract","err","console","error","type","data","checkIfWalletIsConnected","accountConnected","log","Error","tryInit","require","events","handleChange","window","location","reload","forEach","e","on","removeListener"],"sources":["C:/Users/jaspz/Documents/GitHub/ITP/Blockchain-Trusted-Model/client/src/contexts/EthContext/EthProvider.jsx"],"sourcesContent":["import React, { useReducer, useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [loginState, setLoginState] = useState(false);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        // alert(\"hi?\");\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        // const accounts = await web3.eth.requestAccounts();\n        const accounts = await ethereum.request({ method: 'eth_accounts' });\n        setCurrentAccount(accounts);\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const accountConnected = state.accounts;\n\n      if (accountConnected) {\n        setLoginState(true);\n      } else {\n        console.log(\"No accounts found.\");\n      }\n    } catch (error) {\n      console.log(error);\n      throw new Error(\"No ethereum object\");\n    }\n  }\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/SimpleStorage.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n      window.location.reload();\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch,\n      init,\n      currentAccount,\n      loginState\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}