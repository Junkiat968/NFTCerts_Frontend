{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaspz\\\\Documents\\\\GitHub\\\\ITP\\\\Blockchain-Trusted-Model\\\\client\\\\src\\\\contexts\\\\EthContext\\\\EthProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [navState, setNavState] = useState(true);\n  const init = useCallback(async artifact => {\n    if (artifact) {\n      alert(\"hi?\");\n      const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n      const accounts = await web3.eth.requestAccounts();\n      setCurrentAccount(accounts);\n      const networkID = await web3.eth.net.getId();\n      const {\n        abi\n      } = artifact;\n      let address, contract;\n\n      try {\n        address = artifact.networks[networkID].address;\n        contract = new web3.eth.Contract(abi, address);\n      } catch (err) {\n        console.error(err);\n      }\n\n      dispatch({\n        type: actions.init,\n        data: {\n          artifact,\n          web3,\n          accounts,\n          networkID,\n          contract\n        }\n      });\n    }\n  }, []);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const accountConnected = accounts; // if (accounts.length) {\n\n      if (acc) {\n        // alert(acc);\n        setCurrentAccount(accounts[0]);\n        setNavState(false);\n      } else {\n        console.log(\"No accounts found.\");\n      }\n    } catch (error) {\n      console.log(error);\n      throw new Error(\"No ethereum object\");\n    }\n  };\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/SimpleStorage.json\");\n\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    const events = [\"chainChanged\", \"accountsChanged\"];\n\n    const handleChange = () => {\n      init(state.artifact);\n      window.location.reload();\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n  return /*#__PURE__*/_jsxDEV(EthContext.Provider, {\n    value: {\n      state,\n      dispatch,\n      init,\n      currentAccount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EthProvider, \"2xMnfsUryXJGqlVpdX8iVoA4Jl0=\");\n\n_c = EthProvider;\nexport default EthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"EthProvider\");","map":{"version":3,"names":["React","useReducer","useCallback","useEffect","useState","Web3","EthContext","reducer","actions","initialState","EthProvider","children","state","dispatch","currentAccount","setCurrentAccount","navState","setNavState","init","artifact","alert","web3","givenProvider","accounts","eth","requestAccounts","networkID","net","getId","abi","address","contract","networks","Contract","err","console","error","type","data","checkIfWalletIsConnected","accountConnected","acc","log","Error","tryInit","require","events","handleChange","window","location","reload","forEach","e","ethereum","on","removeListener"],"sources":["C:/Users/jaspz/Documents/GitHub/ITP/Blockchain-Trusted-Model/client/src/contexts/EthContext/EthProvider.jsx"],"sourcesContent":["import React, { useReducer, useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [navState, setNavState] = useState(true);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        alert(\"hi?\");\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        setCurrentAccount(accounts);\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const accountConnected = accounts;\n\n      // if (accounts.length) {\n      if (acc) {\n        // alert(acc);\n        setCurrentAccount(accounts[0]);\n        setNavState(false);\n\n      } else {\n        console.log(\"No accounts found.\");\n      }\n    } catch (error) {\n      console.log(error);\n      throw new Error(\"No ethereum object\");\n    }\n  }\n\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/SimpleStorage.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n      window.location.reload();\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch,\n      init,\n      currentAccount\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}