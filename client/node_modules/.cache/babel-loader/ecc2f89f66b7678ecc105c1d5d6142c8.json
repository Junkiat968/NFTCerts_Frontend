{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaspz\\\\Documents\\\\GitHub\\\\ITP\\\\Blockchain-Trusted-Model\\\\client\\\\src\\\\contexts\\\\ContractProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from 'ethers';\nimport { base64ContractAddress, base64ContractABI, sitnftContractAddress, sitnftContractABI } from '../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  ethereum\n} = window;\nexport const ContractContext = /*#__PURE__*/React.createContext();\nconst provider = new ethers.providers.Web3Provider(ethereum);\nconst signer = provider.getSigner();\nvar tks = localStorage.getItem(\"tokens\");\n/** Get SITNFT Contract Instance*/\n\nconst getSITNFTContract = () => {\n  const sitnftContract = new ethers.Contract(sitnftContractAddress, sitnftContractABI, signer);\n  console.log(provider, signer, sitnftContract);\n  return sitnftContract;\n};\n\nexport const ContractProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // Get local storage\n  const [formAddressData, setFormAddressData] = useState({\n    addressInput: \"\"\n  });\n  const [loading, setLoading] = useState(false); // Admin Constants\n\n  const [isAdminResult, setIsAdminResult] = useState(''); // Faculty Constants\n\n  const [isFacultyResult, setIsFacultyResult] = useState(''); // Mint Constants \n\n  const [mintData, setMintData] = useState({\n    moduleCode: \"\",\n    testType: \"\",\n    grade: \"\",\n    trimester: \"\",\n    recipient: \"\"\n  });\n  const [mintResult, setMintResult] = useState(''); // Student Constants\n\n  const [studentResult, setStudentResult] = useState('');\n  const [formAddStudentData, setFormAddStudentData] = useState({\n    studentId: \"\",\n    studentAddress: \"\"\n  }); // TransactionResult Constants\n\n  const [transactionsResult, setTransactionsResult] = useState('');\n  /** Form Handling */\n\n  const handleChange = (e, name) => {\n    setFormAddressData(prevState => ({ ...prevState,\n      [name]: e.target.value\n    }));\n  };\n\n  function handleMint(evt) {\n    const value = evt.target.value;\n    setMintData({ ...mintData,\n      [evt.target.name]: value\n    });\n  }\n\n  function handleStudent(evt) {\n    const value = evt.target.value;\n    setFormAddStudentData({ ...formAddStudentData,\n      [evt.target.name]: value\n    });\n  } // Admin Functions\n\n\n  const functIsAdmin = async () => {\n    try {\n      const {\n        addressInput\n      } = formAddressData;\n      const sitnftInstance = getSITNFTContract();\n      console.log(sitnftInstance);\n      const result = await sitnftInstance.isAdmin(addressInput.toString());\n      setIsAdminResult(result);\n      return result;\n    } catch (err) {\n      setIsAdminResult(err);\n      console.error(err);\n      return err;\n    }\n  };\n\n  const makeAdmin = async () => {\n    const {\n      addressInput\n    } = formAddressData;\n    const sitnftInstance = getSITNFTContract();\n\n    try {\n      const result = await sitnftInstance.addAdmin(addressInput.toString());\n      console.log(result);\n      functIsAdmin();\n    } catch (err) {\n      setIsAdminResult(err);\n      console.error(err);\n      return err;\n    }\n  };\n\n  const removeAdmin = async () => {\n    const {\n      addressInput\n    } = formAddressData;\n    const sitnftInstance = getSITNFTContract();\n\n    try {\n      const result = await sitnftInstance.removeAdmin(addressInput.toString());\n      console.log(result);\n      functIsAdmin();\n    } catch (err) {\n      setIsAdminResult(err);\n      console.error(err);\n      return err;\n    }\n  }; // Faculty Functions\n\n\n  const functIsFaculty = async () => {\n    try {\n      const {\n        addressInput\n      } = formAddressData;\n      const sitnftInstance = getSITNFTContract();\n      const result = await sitnftInstance.isFaculty(addressInput.toString());\n      setIsFacultyResult(result);\n      return result;\n    } catch (err) {\n      setIsFacultyResult(err);\n      console.error(err);\n      return err;\n    }\n  };\n\n  const makeFaculty = async () => {\n    const {\n      addressInput\n    } = formAddressData;\n    const sitnftInstance = getSITNFTContract();\n\n    try {\n      const result = await sitnftInstance.addFaculty(addressInput.toString());\n      console.log(result);\n      functIsFaculty();\n    } catch (err) {\n      setIsFacultyResult(err);\n      console.error(err);\n      return err;\n    }\n  };\n\n  const removeFaculty = async () => {\n    const {\n      addressInput\n    } = formAddressData;\n    const sitnftInstance = getSITNFTContract();\n\n    try {\n      const result = await sitnftInstance.removeFaculty(addressInput.toString());\n      console.log(result);\n      functIsFaculty();\n    } catch (err) {\n      setIsFacultyResult(err);\n      console.error(err);\n      return err;\n    }\n  }; // Mint Functions\n\n\n  const functMint = async () => {\n    const {\n      moduleCode,\n      testType,\n      grade,\n      trimester,\n      recipient\n    } = mintData;\n    const sitnftInstance = getSITNFTContract();\n\n    try {\n      console.log(moduleCode, testType, grade, trimester, recipient);\n      const result = await sitnftInstance.mint(moduleCode, testType, grade, trimester, recipient);\n      setMintResult(result);\n      return result;\n    } catch (err) {\n      console.error(err);\n      setMintResult(err);\n      return err;\n    }\n  }; // Student Functions\n\n\n  const functAddStudent = async () => {\n    const {\n      studentId,\n      studentAddress\n    } = formAddStudentData;\n    const sitnftInstance = getSITNFTContract();\n\n    try {\n      const result = await sitnftInstance.addStudentAddress(studentId, studentAddress);\n      console.log(result);\n      setStudentResult(result);\n      return result;\n    } catch (err) {\n      console.error(err);\n      setStudentResult(err);\n      return err;\n    }\n  };\n\n  const getStudentAddress = async () => {\n    const {\n      studentId\n    } = formAddStudentData;\n    const sitnftInstance = getSITNFTContract();\n\n    try {\n      const result = await sitnftInstance.getStudentAddress(studentId);\n      console.log(result);\n      setStudentResult(result);\n      return result;\n    } catch (err) {\n      console.error(err);\n      setStudentResult(err);\n      return err;\n    }\n  }; // MyGrade Functions\n\n\n  const functGetAllTokens = async () => {\n    const sitnftInstance = getSITNFTContract();\n\n    try {\n      var result = [];\n      const tokensNo = await sitnftInstance.totalSupply();\n\n      for (let i = 0; i < tokensNo; i++) {\n        const tempItem = await sitnftInstance.attributes(i + 1);\n        result.push(tempItem);\n      }\n\n      console.log(result);\n      setTransactionsResult(result);\n      setLoading(false);\n      tks = localStorage.setItem(\"tokens\", result);\n      alert(result);\n      alert(tks);\n      return result;\n    } catch (err) {\n      console.error(err);\n      setTransactionsResult(err);\n      return err;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContractContext.Provider, {\n    value: {\n      loading,\n      setLoading,\n      formAddressData,\n      handleChange,\n      functIsAdmin,\n      makeAdmin,\n      removeAdmin,\n      isAdminResult,\n      functIsFaculty,\n      isFacultyResult,\n      makeFaculty,\n      removeFaculty,\n      functMint,\n      mintData,\n      mintResult,\n      handleMint,\n      functAddStudent,\n      formAddStudentData,\n      handleStudent,\n      studentResult,\n      getStudentAddress,\n      functGetAllTokens,\n      transactionsResult\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContractProvider, \"+H4xqOTBmOYdxyRWnFESIYCmQzU=\");\n\n_c = ContractProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractProvider\");","map":{"version":3,"names":["React","useEffect","useState","ethers","base64ContractAddress","base64ContractABI","sitnftContractAddress","sitnftContractABI","ethereum","window","ContractContext","createContext","provider","providers","Web3Provider","signer","getSigner","tks","localStorage","getItem","getSITNFTContract","sitnftContract","Contract","console","log","ContractProvider","children","formAddressData","setFormAddressData","addressInput","loading","setLoading","isAdminResult","setIsAdminResult","isFacultyResult","setIsFacultyResult","mintData","setMintData","moduleCode","testType","grade","trimester","recipient","mintResult","setMintResult","studentResult","setStudentResult","formAddStudentData","setFormAddStudentData","studentId","studentAddress","transactionsResult","setTransactionsResult","handleChange","e","name","prevState","target","value","handleMint","evt","handleStudent","functIsAdmin","sitnftInstance","result","isAdmin","toString","err","error","makeAdmin","addAdmin","removeAdmin","functIsFaculty","isFaculty","makeFaculty","addFaculty","removeFaculty","functMint","mint","functAddStudent","addStudentAddress","getStudentAddress","functGetAllTokens","tokensNo","totalSupply","i","tempItem","attributes","push","setItem","alert"],"sources":["C:/Users/jaspz/Documents/GitHub/ITP/Blockchain-Trusted-Model/client/src/contexts/ContractProvider.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from 'ethers';\r\nimport {\r\n    base64ContractAddress,\r\n    base64ContractABI,\r\n    sitnftContractAddress,\r\n    sitnftContractABI\r\n} from '../utils/constants';\r\nconst { ethereum } = window;\r\n\r\nexport const ContractContext = React.createContext();\r\nconst provider = new ethers.providers.Web3Provider(ethereum);\r\nconst signer = provider.getSigner();\r\n\r\nvar tks = localStorage.getItem(\"tokens\");\r\n\r\n\r\n/** Get SITNFT Contract Instance*/\r\nconst getSITNFTContract = () => {\r\n    const sitnftContract = new ethers.Contract(sitnftContractAddress, sitnftContractABI, signer);\r\n    console.log(provider, signer, sitnftContract);\r\n    return sitnftContract;\r\n}\r\n\r\nexport const ContractProvider = ({ children }) => {\r\n    // Get local storage\r\n    const [formAddressData, setFormAddressData] = useState({ addressInput: \"\" });\r\n    const [loading, setLoading] = useState(false);\r\n    // Admin Constants\r\n    const [isAdminResult, setIsAdminResult] = useState('');\r\n    // Faculty Constants\r\n    const [isFacultyResult, setIsFacultyResult] = useState('');\r\n    // Mint Constants \r\n    const [mintData, setMintData] = useState({\r\n        moduleCode: \"\",\r\n        testType: \"\",\r\n        grade: \"\",\r\n        trimester: \"\",\r\n        recipient: \"\"\r\n    });\r\n    const [mintResult, setMintResult] = useState('');\r\n    // Student Constants\r\n    const [studentResult, setStudentResult] = useState('');\r\n    const [formAddStudentData, setFormAddStudentData] = useState({ studentId: \"\", studentAddress: \"\" });\r\n    // TransactionResult Constants\r\n    const [transactionsResult, setTransactionsResult] = useState('');\r\n\r\n    /** Form Handling */\r\n    const handleChange = (e, name) => {\r\n        setFormAddressData((prevState) => ({ ...prevState, [name]: e.target.value }));\r\n    };\r\n    function handleMint(evt) {\r\n        const value = evt.target.value;\r\n        setMintData({\r\n            ...mintData,\r\n            [evt.target.name]: value\r\n        });\r\n    }\r\n    function handleStudent(evt) {\r\n        const value = evt.target.value;\r\n        setFormAddStudentData({\r\n            ...formAddStudentData,\r\n            [evt.target.name]: value\r\n        });\r\n    }\r\n\r\n    // Admin Functions\r\n    const functIsAdmin = async () => {\r\n        try {\r\n            const { addressInput } = formAddressData;\r\n            const sitnftInstance = getSITNFTContract();\r\n            console.log(sitnftInstance);\r\n            const result = await sitnftInstance.isAdmin((addressInput).toString());\r\n            setIsAdminResult(result);\r\n            return result;\r\n        } catch (err) {\r\n            setIsAdminResult(err);\r\n            console.error(err);\r\n            return err;\r\n        }\r\n    }\r\n    const makeAdmin = async () => {\r\n        const { addressInput } = formAddressData;\r\n        const sitnftInstance = getSITNFTContract();\r\n        try {\r\n            const result = await sitnftInstance.addAdmin((addressInput).toString());\r\n            console.log(result);\r\n            functIsAdmin();\r\n        } catch (err) {\r\n            setIsAdminResult(err);\r\n            console.error(err);\r\n            return err;\r\n        }\r\n    }\r\n    const removeAdmin = async () => {\r\n        const { addressInput } = formAddressData;\r\n        const sitnftInstance = getSITNFTContract();\r\n        try {\r\n            const result = await sitnftInstance.removeAdmin((addressInput).toString());\r\n            console.log(result);\r\n            functIsAdmin();\r\n        } catch (err) {\r\n            setIsAdminResult(err);\r\n            console.error(err);\r\n            return err;\r\n        }\r\n    }\r\n\r\n    // Faculty Functions\r\n    const functIsFaculty = async () => {\r\n        try {\r\n            const { addressInput } = formAddressData;\r\n            const sitnftInstance = getSITNFTContract();\r\n            const result = await sitnftInstance.isFaculty((addressInput).toString());\r\n            setIsFacultyResult(result);\r\n            return result;\r\n        } catch (err) {\r\n            setIsFacultyResult(err);\r\n            console.error(err);\r\n            return err;\r\n        }\r\n    }\r\n    const makeFaculty = async () => {\r\n        const { addressInput } = formAddressData;\r\n        const sitnftInstance = getSITNFTContract();\r\n        try {\r\n            const result = await sitnftInstance.addFaculty((addressInput).toString());\r\n            console.log(result);\r\n            functIsFaculty();\r\n        } catch (err) {\r\n            setIsFacultyResult(err);\r\n            console.error(err);\r\n            return err;\r\n        }\r\n    }\r\n    const removeFaculty = async () => {\r\n        const { addressInput } = formAddressData;\r\n        const sitnftInstance = getSITNFTContract();\r\n        try {\r\n            const result = await sitnftInstance.removeFaculty((addressInput).toString());\r\n            console.log(result);\r\n            functIsFaculty();\r\n        } catch (err) {\r\n            setIsFacultyResult(err);\r\n            console.error(err);\r\n            return err;\r\n        }\r\n    }\r\n\r\n    // Mint Functions\r\n    const functMint = async () => {\r\n        const {\r\n            moduleCode,\r\n            testType,\r\n            grade,\r\n            trimester,\r\n            recipient\r\n        } = mintData;\r\n\r\n        const sitnftInstance = getSITNFTContract();\r\n        try {\r\n            console.log(\r\n                moduleCode,\r\n                testType,\r\n                grade,\r\n                trimester,\r\n                recipient\r\n            );\r\n            const result = await sitnftInstance.mint(\r\n                moduleCode,\r\n                testType,\r\n                grade,\r\n                trimester,\r\n                recipient\r\n            );\r\n            setMintResult(result);\r\n            return result;\r\n        } catch (err) {\r\n            console.error(err);\r\n            setMintResult(err);\r\n            return err;\r\n        }\r\n    }\r\n\r\n    // Student Functions\r\n    const functAddStudent = async () => {\r\n        const {\r\n            studentId,\r\n            studentAddress,\r\n        } = formAddStudentData;\r\n\r\n        const sitnftInstance = getSITNFTContract();\r\n        try {\r\n            const result = await sitnftInstance.addStudentAddress(\r\n                studentId,\r\n                studentAddress,\r\n            );\r\n            console.log(result);\r\n            setStudentResult(result);\r\n            return result;\r\n        } catch (err) {\r\n            console.error(err);\r\n            setStudentResult(err);\r\n            return err;\r\n        }\r\n    }\r\n    const getStudentAddress = async () => {\r\n        const {\r\n            studentId\r\n        } = formAddStudentData;\r\n        const sitnftInstance = getSITNFTContract();\r\n        try {\r\n            const result = await sitnftInstance.getStudentAddress(\r\n                studentId,\r\n            );\r\n            console.log(result);\r\n            setStudentResult(result);\r\n            return result;\r\n        } catch (err) {\r\n            console.error(err);\r\n            setStudentResult(err);\r\n            return err;\r\n        }\r\n    }\r\n\r\n    // MyGrade Functions\r\n    const functGetAllTokens = async () => {\r\n        const sitnftInstance = getSITNFTContract();\r\n        try {\r\n            var result = [];\r\n            const tokensNo = await sitnftInstance.totalSupply();\r\n            for (let i = 0; i < tokensNo; i++) {\r\n                const tempItem = await sitnftInstance.attributes(i + 1);\r\n                result.push(tempItem);\r\n            }\r\n            console.log(result);\r\n            setTransactionsResult(result);\r\n            setLoading(false);\r\n            tks = localStorage.setItem(\"tokens\", result);\r\n            alert(result);\r\n            alert(tks);\r\n            return result;\r\n        } catch (err) {\r\n            console.error(err);\r\n            setTransactionsResult(err);\r\n            return err;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ContractContext.Provider\r\n            value={{\r\n                loading,\r\n                setLoading,\r\n                formAddressData,\r\n                handleChange,\r\n                functIsAdmin,\r\n                makeAdmin,\r\n                removeAdmin,\r\n                isAdminResult,\r\n                functIsFaculty,\r\n                isFacultyResult,\r\n                makeFaculty,\r\n                removeFaculty,\r\n                functMint,\r\n                mintData,\r\n                mintResult,\r\n                handleMint,\r\n                functAddStudent,\r\n                formAddStudentData,\r\n                handleStudent,\r\n                studentResult,\r\n                getStudentAddress,\r\n                functGetAllTokens,\r\n                transactionsResult\r\n            }}>\r\n            {children}\r\n        </ContractContext.Provider >\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}