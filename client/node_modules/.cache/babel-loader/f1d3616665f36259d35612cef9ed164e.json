{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaspz\\\\Documents\\\\GitHub\\\\ITP\\\\Blockchain-Trusted-Model\\\\client\\\\src\\\\contexts\\\\EthContext\\\\EthProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EthProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [currentAccount, setCurrentAccount] = useState('');\n  const init = useCallback(async artifact => {\n    if (artifact) {\n      const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n      const accounts = await web3.eth.requestAccounts();\n      setCurrentAccount(accounts);\n      const networkID = await web3.eth.net.getId();\n      const {\n        abi\n      } = artifact;\n      let address, contract;\n\n      try {\n        address = artifact.networks[networkID].address;\n        contract = new web3.eth.Contract(abi, address);\n      } catch (err) {\n        console.error(err);\n      }\n\n      dispatch({\n        type: actions.init,\n        data: {\n          artifact,\n          web3,\n          accounts,\n          networkID,\n          contract\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/SimpleStorage.json\");\n\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n\n    const handleChange = () => {\n      init(state.artifact);\n      window.location.reload();\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n  return /*#__PURE__*/_jsxDEV(EthContext.Provider, {\n    value: {\n      state,\n      dispatch,\n      init,\n      currentAccount\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EthProvider, \"TMpoxPO4LVePud/3WGMlEbgZYno=\");\n\n_c = EthProvider;\nexport default EthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"EthProvider\");","map":{"version":3,"names":["React","useReducer","useCallback","useEffect","useState","Web3","EthContext","reducer","actions","initialState","EthProvider","children","state","dispatch","currentAccount","setCurrentAccount","init","artifact","web3","givenProvider","accounts","eth","requestAccounts","networkID","net","getId","abi","address","contract","networks","Contract","err","console","error","type","data","tryInit","require","events","handleChange","window","location","reload","forEach","e","ethereum","on","removeListener"],"sources":["C:/Users/jaspz/Documents/GitHub/ITP/Blockchain-Trusted-Model/client/src/contexts/EthContext/EthProvider.jsx"],"sourcesContent":["import React, { useReducer, useCallback, useEffect, useState } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [currentAccount, setCurrentAccount] = useState('');\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        setCurrentAccount(accounts);\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/SimpleStorage.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n      window.location.reload();\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch,\n      init,\n      currentAccount\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}